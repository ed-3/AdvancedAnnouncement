plugins {
    id 'java'
}

group = 'me.ed333.plugin'
version = '1.2.2-release'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        url "https://repo.dmulloy2.net/repository/public/"
    }

    maven {
        name = 'PAPI'
        url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

test{
    useJUnitPlatform()
}


dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    implementation 'org.jetbrains:annotations:24.0.1'
    compileOnly 'me.clip:placeholderapi:2.11.1'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.0.0'
    compileOnly 'org.junit.jupiter:junit-jupiter:5.9.2'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
    options.encoding = "UTF-8"
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
